# Generated by Django 4.2.1 on 2023-06-09 17:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('gcna_data', '0027_alter_user_info_photo'),
    ]

    operations = [
        migrations.CreateModel(
            name='Citrus_Mango_Trees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('No_of_Bearing_Trees_Lime', models.IntegerField(default=0)),
                ('No_of_Bearing_Trees_Lemon', models.IntegerField(default=0)),
                ('No_of_Bearing_Trees_Mangoes', models.IntegerField(default=0)),
                ('Estimated_Productiom_Lime', models.IntegerField(default=0)),
                ('Estimated_Productiom_Lemon', models.IntegerField(default=0)),
                ('Estimated_Productiom_Mangoes', models.IntegerField(default=0)),
                ('No_of_Non_Bearing_Trees_Lime', models.IntegerField(default=0)),
                ('No_of_Non_Bearing_Trees_Lemon', models.IntegerField(default=0)),
                ('No_of_Non_Bearing_Trees_Mangoes', models.IntegerField(default=0)),
                ('Presence_of_Disease_Lime', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Lemon', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Mangoes', models.CharField(max_length=50, null=True)),
                ('Cultivation_Lime', models.CharField(max_length=50, null=True)),
                ('Cultivation_Lemon', models.CharField(max_length=50, null=True)),
                ('Cultivation_Mangoes', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coconut_Trees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('End_Use_Atlantic_Tall', models.CharField(max_length=50, null=True)),
                ('End_Use_Dwarf', models.CharField(max_length=50, null=True)),
                ('No_of_Bearing_Trees_Atlantic_Tall', models.IntegerField(default=0)),
                ('No_of_Bearing_Trees_Dwarf', models.IntegerField(default=0)),
                ('Estimated_Productiom_Atlantic_Tall', models.IntegerField(default=0)),
                ('Estimated_Productiom_Dwarf', models.IntegerField(default=0)),
                ('No_of_Non_Bearing_Trees_Atlantic_Tall', models.IntegerField(default=0)),
                ('No_of_Non_Bearing_Trees_Dwarf', models.IntegerField(default=0)),
                ('Presence_of_Disease_Atlantic_Tall', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Dwarf', models.CharField(max_length=50, null=True)),
                ('Cultivation_Atlantic_Tall', models.CharField(max_length=50, null=True)),
                ('Cultivation_Dwarf', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Weeds', models.CharField(choices=[('', 'Select'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1)),
                ('Drains', models.CharField(choices=[('', 'Select'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1)),
                ('Fertilizing', models.CharField(choices=[('', 'Select'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1)),
                ('Pruning', models.CharField(choices=[('', 'Select'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1)),
                ('Harvesting', models.CharField(choices=[('', 'Select'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1)),
                ('Land_Clearing', models.CharField(choices=[('', 'Select'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1)),
                ('Planting', models.CharField(choices=[('', 'Select'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1)),
                ('Presence_of_pest_and_diseases_on_nutmegs', models.CharField(choices=[('', 'Select'), ('Y', 'Good'), ('N', 'Fair'), ('N', 'Poor')], default='P', max_length=1)),
                ('Presence_of_pest_and_diseases_on_nutmegs_cont', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Farm_House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Farm_House', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Farm_Water_Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Municipal_Nawasa', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('River', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Spring', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Well', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Haevested_Rain_Water', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('is_water_treated', models.CharField(choices=[('', 'Was this water source is used?'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('is_water_treated_cont', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Farmer_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nutmeg_ID_No', models.IntegerField(max_length=50, null=True, unique=True)),
                ('name', models.CharField(max_length=50, null=True)),
                ('age', models.CharField(choices=[('A', '18-25'), ('B', '26-35'), ('C', '36-50'), ('D', '51-65'), ('D', '66+')], default='A', max_length=1)),
                ('parish', models.CharField(max_length=50, null=True)),
                ('village', models.CharField(max_length=50, null=True)),
                ('latitude', models.DecimalField(decimal_places=6, default=0.0, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, default=0.0, max_digits=9)),
                ('acreage', models.CharField(max_length=50, null=True)),
                ('insurance_zone', models.CharField(max_length=50, null=True)),
                ('home_phone', models.CharField(max_length=50, null=True)),
                ('mobile_phone', models.CharField(max_length=50, null=True)),
                ('email', models.EmailField(max_length=50, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Food_Safety_and_Quality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Fertilizer', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Fertilizer_cont', models.CharField(max_length=50, null=True)),
                ('Last_application', models.CharField(max_length=50, null=True)),
                ('Picture', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Raw_Manure', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Raw_Manure_cont', models.CharField(max_length=50, null=True)),
                ('Composed_manure', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Other', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Land_Tenur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Owner_Legal_Title', models.CharField(max_length=50, null=True)),
                ('Freehold', models.CharField(max_length=50, null=True)),
                ('Family', models.CharField(max_length=100, null=True)),
                ('Leashold', models.CharField(max_length=50, null=True)),
                ('Leashold_comment', models.CharField(max_length=50, null=True)),
                ('Caretaker', models.CharField(max_length=50, null=True)),
                ('Agent', models.CharField(max_length=50, null=True)),
                ('No_Legal_Title', models.CharField(max_length=50, null=True)),
                ('Status', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nutmeg_Frequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Regular', models.CharField(max_length=50, null=True)),
                ('Occasional', models.CharField(max_length=50, null=True)),
                ('Never', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nutmeg_Land',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('norm_land', models.CharField(max_length=50, null=True)),
                ('Seasonal', models.CharField(max_length=50, null=True)),
                ('Abandoned', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nutmeg_Trees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Mature_trees_25_years_quantity', models.IntegerField(default=0)),
                ('Mature_trees_25_years_estimated_production', models.IntegerField(default=0)),
                ('Bearing_trees_16_24_years_quantity', models.IntegerField(default=0)),
                ('Bearing_trees_16_24_years', models.IntegerField(default=0)),
                ('Bearing_trees_6_15_years_quantity', models.IntegerField(default=0)),
                ('Bearing_trees_6_15_years_estimated_production', models.IntegerField(default=0)),
                ('Non_Bearing_trees_5_years_quantity', models.IntegerField(default=0)),
                ('Non_Bearing_trees_5_years_estimated_production', models.IntegerField(default=0)),
                ('Estimated_peak_period', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Nutmeg_Variety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Banda', models.CharField(max_length=50, null=True)),
                ('Papua', models.CharField(max_length=50, null=True)),
                ('Malayan_Indonesia', models.CharField(max_length=50, null=True)),
                ('dominant_Variety', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Other_Crops_Cultivated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name_of_Crops', models.CharField(max_length=50, null=True)),
                ('Number_of_Trees_or_stools', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Other_Seasoning_Trees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('No_of_Stools_chive', models.IntegerField(default=0)),
                ('No_of_Stools_Thyme', models.IntegerField(default=0)),
                ('No_of_Stools_Celery', models.IntegerField(default=0)),
                ('No_of_Stools_Parsley', models.IntegerField(default=0)),
                ('No_of_Stools_Petit_Bum', models.IntegerField(default=0)),
                ('No_of_Stools_Seasoning_Pepper', models.IntegerField(default=0)),
                ('No_of_Stools_Hot_Pepper', models.IntegerField(default=0)),
                ('Presence_of_Disease_chive', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Thyme', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Celery', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Parsley', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Petit_Bum', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Seasoning_Pepper', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Hot_Pepper', models.CharField(max_length=50, null=True)),
                ('Cultivation_chive', models.CharField(max_length=50, null=True)),
                ('Cultivation_Thyme', models.CharField(max_length=50, null=True)),
                ('Cultivation_Celery', models.CharField(max_length=50, null=True)),
                ('Cultivation_Parsley', models.CharField(max_length=50, null=True)),
                ('Cultivation_Petit_Bum', models.CharField(max_length=50, null=True)),
                ('Cultivation_Seasoning_Pepper', models.CharField(max_length=50, null=True)),
                ('Cultivation_Hot_Pepper', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Other_Spices_Trees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('No_of_Bearing_Trees_Clove', models.IntegerField(default=0)),
                ('No_of_Bearing_Trees_Cinnamon', models.IntegerField(default=0)),
                ('No_of_Bearing_Trees_Bayleaf', models.IntegerField(default=0)),
                ('No_of_Bearing_Trees_Tumeric', models.IntegerField(default=0)),
                ('No_of_Bearing_Trees_Ginger', models.IntegerField(default=0)),
                ('Estimated_Productiom_Clove', models.IntegerField(default=0)),
                ('Estimated_Productiom_Cinnamon', models.IntegerField(default=0)),
                ('Estimated_Productiom_Bayleaf', models.IntegerField(default=0)),
                ('Estimated_Productiom_Tumeric', models.IntegerField(default=0)),
                ('Estimated_Productiom_Ginger', models.IntegerField(default=0)),
                ('No_of_Non_Bearing_Trees_Clove', models.IntegerField(default=0)),
                ('No_of_Non_Bearing_Trees_Cinnamon', models.IntegerField(default=0)),
                ('No_of_Non_Bearing_Trees_Bayleaf', models.IntegerField(default=0)),
                ('No_of_Non_Bearing_Trees_Tumeric', models.IntegerField(default=0)),
                ('No_of_Non_Bearing_Trees_Ginger', models.IntegerField(default=0)),
                ('Presence_of_Disease_Clove', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Cinnamon', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Bayleaf', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Tumeric', models.CharField(max_length=50, null=True)),
                ('Presence_of_Disease_Ginger', models.CharField(max_length=50, null=True)),
                ('Cultivation_Clove', models.CharField(max_length=50, null=True)),
                ('Cultivation_Cinnamon', models.CharField(max_length=50, null=True)),
                ('Cultivation_Bayleaf', models.CharField(max_length=50, null=True)),
                ('Cultivation_Tumeric', models.CharField(max_length=50, null=True)),
                ('Cultivation_Ginger', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Pesticides', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Septic_Tanks', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Other', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Potential_Risks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Slides', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Flooding', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Heavy_Metal', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Chemical_Spills', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Dumping_of_trash', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
                ('Feedlot', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Road_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Road_Access', models.CharField(choices=[('', 'Select'), ('Y', 'Yes'), ('N', 'No')], default='P', max_length=1)),
            ],
        ),
        migrations.RemoveField(
            model_name='symmary',
            name='annual_production',
        ),
        migrations.RemoveField(
            model_name='symmary',
            name='farmer_ID',
        ),
        migrations.RemoveField(
            model_name='symmary',
            name='peak_productions',
        ),
        migrations.AddField(
            model_name='symmary',
            name='estimated_annual_production',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='symmary',
            name='estimated_peak_productions',
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.CreateModel(
            name='Other_Crops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_crops', models.ManyToManyField(to='gcna_data.crop')),
            ],
        ),
        migrations.CreateModel(
            name='land_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('land_elevation', models.CharField(choices=[('Low Belt', 'Low Belt'), ('Middle Belt', 'Middle Belt'), ('High Belt', 'High Belt')], default='Select', max_length=100)),
                ('soil_type', models.CharField(choices=[('', 'Select'), ('Sandy Soil', 'Sandy Soil'), ('Clay Soil', 'Clay Soil'), ('Stilt Soil', 'Stilt Soil'), ('Loamy Soil', 'Loamy Soil'), ('Clay Loam Soil', 'Clay Loam Soil'), ('Sandy Loam Soil', 'Sandy Loam Soil')], default='P', max_length=100)),
                ('rainfall_pattern', models.CharField(choices=[('', 'Select'), ('Persistent', 'Persistent'), ('Occasional', 'Occasional'), ('Mild', 'Mild')], default='P', max_length=100)),
                ('farmer_ID', models.ForeignKey(max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='gcna_data.user_info', to_field='farmer_ID')),
            ],
        ),
    ]
